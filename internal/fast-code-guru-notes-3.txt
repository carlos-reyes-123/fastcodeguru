https://tailkit.com/app/components/marketing/sections/blog-lists
https://tailkit.com/app/components/marketing/sections/about

https://tailwindcss.com/blog/introducing-catalyst
https://tailwindcss.com/plus/ui-kit
https://catalyst.tailwindui.com/docs
https://catalyst-demo.tailwindui.com/

https://developers.cloudflare.com/pages/framework-guides/deploy-a-react-site/

https://nextjs.org/docs/pages/api-reference/components/image
https://nextjs.org/docs/app/api-reference/config/next-config-js/typescript

# -------------------------------------------------------------------
https://nextjs.org/
npx create-next-app@latest
npm run dev

# -------------------------------------------------------------------
# Inter font - for interfaces
# over 2000 glyphs covering 147 languages
# dedicated designs for weights 100, 400 and 900
https://github.com/rsms/inter
https://rsms.me/inter/
https://fonts.google.com/specimen/Inter

import { Inter } from 'next/font/google'
const inter = Geist({
  subsets: ['latin'],
})

<html lang="en" className={inter.className}>

<!-- HTML in your document's head -->
<link rel="preconnect" href="https://rsms.me/">
<link rel="stylesheet" href="https://rsms.me/inter/inter.css">

/* CSS */
:root {
  font-family: Inter, sans-serif;
  font-feature-settings: 'liga' 1, 'calt' 1; /* fix for Chrome */
}
@supports (font-variation-settings: normal) {
  :root { font-family: InterVariable, sans-serif; }
}

# -------------------------------------------------------------------
# The world's largest marketplace of themes, templates and UI kits for the modern stack
https://www.builtatlightspeed.com/

# -------------------------------------------------------------------
# Tailwind theme
https://tailwindcss.com/docs/theme
https://aicolors.co/
https://www.bairesdev.com/tools/color-palette-app/editor/
https://www.realtimecolors.com/?colors=12100f-faf9f8-94847b-c3c3b6-abad99&fonts=Inter-Inter

    --primary-100:#d4eaf7;
    --primary-200:#b6ccd8;
    --primary-300:#3b3c3d;
    --accent-100:#71c4ef;
    --accent-200:#00668c;
    --text-100:#1d1c1c;
    --text-200:#313d44;
    --bg-100:#fffefb;
    --bg-200:#f5f4f1;
    --bg-300:#cccbc8;

# -------------------------------------------------------------------
# Floating UI
https://floating-ui.com/
https://github.com/floating-ui/floating-ui
npm install @floating-ui/react

# -------------------------------------------------------------------
# Markdown for the component era
https://mdxjs.com/
https://github.com/mdx-js/mdx/
https://mdxjs.com/packages/rollup/

# -------------------------------------------------------------------
# SWC - Sppedy Web Compiler
https://swc.rs/

# -------------------------------------------------------------------
# Page Find
https://pagefind.app/

# -------------------------------------------------------------------
# Page Reading Time

https://github.com/ngryman/reading-time
https://github.com/Bunlong/react-hook-reading-time

# -------------------------------------------------------------------
# Instant Click
# JavaScript library that dramatically speeds up your website
http://instantclick.io/

# -------------------------------------------------------------------
# Instant Page
# Make your siteâ€™s pages instant in 1 minute and improve your conversion rate noticeably.
https://instant.page/

# -------------------------------------------------------------------
# Goat Counter analytics - free
https://www.goatcounter.com/

# -------------------------------------------------------------------
# Similar to Tailwind Catalyst
https://ui.shadcn.com/
https://originui.com/

# -------------------------------------------------------------------
# OpenNext.js on CloudFlare
# The size limit of a Cloudflare Worker is 3 MiB on the Workers Free plan
# After building your Worker, wrangler will show both the original and compressed sizes
# Only the latter (compressed size) matters for the Worker size limit.
# up to 100 Workers on the Workers Free plan.
https://developers.cloudflare.com/workers/platform/limits/

https://opennext.js.org/cloudflare

https://developers.cloudflare.com/workers/wrangler/

npm install @next/mdx @mdx-js/loader @mdx-js/react @types/mdx

# CloudFlare data storage
https://developers.cloudflare.com/kv/
https://developers.cloudflare.com/d1/
https://developers.cloudflare.com/r2/

npm run dev
npm run deploy

# -------------------------------------------------------------------
# Pnpm
https://pnpm.io/

pnpm install
pnpm add <pkg>
pnpm <cmd>

pnpm run dev
pnpm run deploy

# -------------------------------------------------------------------
# Remix/React Router v7

https://reactrouter.com/home
https://github.com/remix-run/react-router
https://remix.run/blog/incremental-path-to-react-19

https://reactrouter.com/start/framework/installation
https://developers.cloudflare.com/pages/framework-guides/deploy-a-remix-site/
https://www.npmjs.com/package/create-cloudflare
https://github.com/cloudflare/workers-sdk
https://developers.cloudflare.com/pages/get-started/c3/

# -------------------------------------------------------------------
# Astro

https://astro.build/
https://github.com/withastro/astro

https://github.com/Charca/astro-blog-template

https://developers.cloudflare.com/pages/framework-guides/deploy-an-astro-site/

pnpm astro add tailwind
pnpm install @headlessui/react framer-motion clsx

# -------------------------------------------------------------------

pnpm run start
pnpm run deploy


https://tailwindcss.504b.cc/

# -------------------------------------------------------------------
# Vite
# https://vite.dev/
https://github.com/vitejs/awesome-vite
https://github.com/vitejs/vite-plugin-react/tree/main/packages/plugin-react-swc
https://github.com/cssninjaStudio/unplugin-fonts

npm create vite@latest fast-code-guru -- --template react-ts
npm install --save-dev vite-tsconfig-paths

# -------------------------------------------------------------------
# React Router
https://reactrouter.com/

npm i react-router
npm install -D @react-router/dev
npm install @react-router/node

# -------------------------------------------------------------------
# Tailwind
# https://tailwindcss.com/

npm install tailwindcss @tailwindcss/vite
# https://tailwindcss.com/docs/installation/using-vite


# -------------------------------------------------------------------
# React


https://react.dev/learn/react-developer-tools

# -------------------------------------------------------------------
# Free static website hosting sites

# Static-only; dead-simple CLI, good for plain React (not Next.js SSR)
Surge.sh

# GitHub Pages
https://pages.github.com/

# -------------------------------------------------------------------
Create a simple blog using Vite, React, Tailwind 4.1, Node.js, and NPM. I want to generate a static website that I can host using GitHub Pages. Write all the source code in TypeScript.

Write the posts using Markdown with a TOML metadata header in each one. The output needs to be a static website. I need an About page and a page called Legal for legal notices. Keep it all very simple, clean, and well-commented.

Use libraries for the TOML and Markdown conversions. Load the Markdown statically at build time from a local folder. Put a navigation menu at the top. Blog posts need to support syntax highlighting and images. Add an example layout and post.

Use a Vite plugin to compile the blog content (Markdown with TOML frontmatter). Add source code syntax highlighting to the blog posts only. Add support for categories and tags to the blog posts.

Display the blog posts on the homepage. The categories and tags should be clickable to filter posts. Display the categories and tags on a sidebar on the left side of the screen. Use the new Tailwind Catalyst library for styling.

Put all the blog posts inside a posts subdirectory. At build time, generate static pages for each category and tag. Support a variety of programming languages with syntax highlighting. Paginate the posts on the home page.

The homepage pagination should show 10 posts per page, with the newest post showing first. You should choose the TOML and Markdown libraries yourself. The categories and tags should be computed at build time and displayed on the sidebar menu. Markdown should also be used for the About and Legal pages.

Call the title "Fast Code Guru". Call the project "fast-code-guru". Use Tailwind Catalyst as much as possible. Add a build script to auto deploy to GitHub Pages.

# -------------------------------------------------------------------
# Zola

https://www.getzola.org/
